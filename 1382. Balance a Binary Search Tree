class Solution {
    public void inorder(TreeNode root, List<Integer> ls){
        if(root == null) return;
        inorder(root.left, ls);
        ls.add(root.val);
        inorder(root.right, ls);
    }
    public TreeNode balanceTree(List<Integer> ls, int st, int end){
        if(st > end){
            return null;
        }
        int mid = (st + end)/2;
        TreeNode temp = new TreeNode(ls.get(mid));

        temp.left = balanceTree(ls, st, mid-1);
        temp.right = balanceTree(ls, mid+1, end);
        return temp;
    }
    public TreeNode balanceBST(TreeNode root) {
        List<Integer> ls = new ArrayList<>();
        inorder(root, ls);
        int end = ls.size()-1;
        return balanceTree(ls, 0, end);
    }
}
